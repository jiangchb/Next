df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else{
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)
}else{
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank == 'increase'){
rank_df <- arrange(df,data_cal)
}else if(rank == 'decrease'){
rank_df <- arrange(df,desc(data_cal))
}
write.table(rank_df, file="save_name.xls", quote=F, col.names=F)
}
dataconvert(n ="fpkm.xls",rc ="r","mean","increase","FPKM")
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df <- arrange(df,data_cal)
}else if(rank=='decrease'){
df <- arrange(df,desc(data_cal))
}
write.table(df, file=save_name.xls, quote=F, col.names=F)
}
dataconvert('r','mean','increase','FPKM')
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df <- arrange(df,data_cal)
}else if(rank=='decrease'){
df <- arrange(df,desc(data_cal))
}
write.table(df, file=save_name.xls, quote=F, col.names=F)
}
dataconvert('r','mean','increase',FPKM)
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df <- arrange(df,data_cal)
}else if(rank=='decrease'){
df <- arrange(df,desc(data_cal))
}
write.table(df, file=save_name.xls, quote=F, col.names=F)
}
dataconvert('r','mean','increase','FPKM')
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df <- arrange(df,data_cal)
}else if(rank=='decrease'){
df <- arrange(df,desc(data_cal))
}
write.table(df, file=save_name.xls, quote=F, col.names=F)
}
dataconvert('r','mean','increase',FPKM)
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df <- arrange(df,data_cal)
}else if(rank=='decrease'){
df <- arrange(df,desc(data_cal))
}
write.table(df, file='save_name.xls', quote=F, col.names=F)
}
dataconvert('r','mean','increase','FPKM')
print(df)
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df <- arrange(df,data_cal)
}else if(rank=='decrease'){
df <- arrange(df,desc(data_cal))
}
write.table(df, file='save_name.xls', quote=F, col.names=F)
}
dataconvert('r','mean','decrease','FPKM')
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df <- arrange(df,data_cal)
}else if(rank=='decrease'){
df <- arrange(df,desc(data_cal))
}
write.table(df, file='save_name.xls', quote=F, col.names=F)
}
dataconvert('r','mean','decrease','FPKM')
print(df)
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df <- arrange(df,df$data_cal)
}else if(rank=='decrease'){
df <- arrange(df,desc(df$data_cal))
}
write.table(df, file='save_name.xls', quote=F, col.names=F)
}
dataconvert('r','mean','decrease','FPKM')
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df <- arrange(df,df$data_cal)
}else if(rank=='decrease'){
df <- arrange(df,desc(df))
}
write.table(df, file='save_name.xls', quote=F, col.names=F)
}
dataconvert('r','mean','increase','FPKM')
print(df1)
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df1 <- arrange(df,data_cal)
}else if(rank=='decrease'){
df1 <- arrange(df,desc(df))
}
print(df1)
write.table(df, file='save_name.xls', quote=F, col.names=F)
}
dataconvert('r','mean','increase','FPKM')
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df1 <- arrange(df,data_cal)
}else if(rank=='decrease'){
df1 <- arrange(df,desc(df))
}
print(df1)
write.table(df, file='save_name.xls', quote=F, col.names=F)
}
dataconvert('r','mean','decrease','FPKM')
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df1 <- arrange(df,data_cal)
}else if(rank=='decrease'){
df1 <- arrange(df,desc(data_cal))
}
print(df1)
write.table(df, file='save_name.xls', quote=F, col.names=F)
}
dataconvert('r','mean','decrease','FPKM')
library(dplyr)
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df1 <- arrange(df,data_cal)
}else if(rank=='decrease'){
df1 <- arrange(df,desc(data_cal))
}
print(df1)
write.table(df, file='save_name.xls', quote=F, col.names=F)
}
dataconvert('r','sum','decrease','FPKM')
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df1 <- arrange(df,data_cal)
}else if(rank=='decrease'){
df1 <- arrange(df,desc(data_cal))
}
print(df1)
write.table(df, file='save_name.xls', quote=F, col.names=T)
}
dataconvert('r','sum','decrease','FPKM')
library(dplyr)
dataconvert <- function(rc,cal,rank,save_name){
df <- read.table("C:/Users/Administrator/Documents/fpkm.xls",header = T,sep = "\t",row.names = 1)
#对行进行操作
if(rc=='r'){
if(cal == "sum"){
df$data_cal <- apply(df,1,sum)
}else if(cal == 'mean'){
df$data_cal <- apply(df,1,mean)}
#对列进行操作
}else if(rc=='c'){
if(cal == 'sum'){
df$data_cal <- apply(df,2,sum)}
else if(cal =='mean'){
df$data_cal <- apply(df,2,mean)}
}
#对处理后的数据按照升序进行排列
if(rank=='increase'){
df1 <- arrange(df,data_cal)
}else if(rank=='decrease'){
df1 <- arrange(df,desc(data_cal))
}
print(df1)
write.table(df, file='save_name.xls', quote=T, col.names=T)
}
dataconvert('r','sum','decrease','FPKM')
Soil_A1 <- c(0.603104,0.360891,24.246700)
Air_B1 <- c(0.499494,0.313831,24.547800)
Water_B1 <- c(5.3290400,0.0753235,13.3292000)
expression <- data.frame(Soil_A1,Air_B1,Water_B1)
View(expression)
View(expression)
Soil_A1 <- c(0.603104,0.360891,24.246700)
Air_B1 <- c(0.499494,0.313831,24.547800)
Water_B1 <- c(5.3290400,0.0753235,13.3292000)
expression <- data.frame(Soil_A1,Air_B1,Water_B1)
rownames(expression) <- c("gene1","gene2","gene3")
View(expression)
Soil_A1 <- c(0.603104,0.360891,24.246700)
Air_B1 <- c(0.499494,0.313831,24.547800)
Water_B1 <- c(5.3290400,0.0753235,13.3292000)
expression <- data.frame(Soil_A1,Air_B1,Water_B1)
rownames(expression) <- c("gene1","gene2","gene3")
tidy_gather <- gather(expression,key=Samplename,value = Expression,-id)
library(tidyr)
Soil_A1 <- c(0.603104,0.360891,24.246700)
Air_B1 <- c(0.499494,0.313831,24.547800)
Water_B1 <- c(5.3290400,0.0753235,13.3292000)
expression <- data.frame(Soil_A1,Air_B1,Water_B1)
rownames(expression) <- c("gene1","gene2","gene3")
tidy_gather <- gather(expression,key=Samplename,value = Expression,-id)
library(tidyr)
Soil_A1 <- c(0.603104,0.360891,24.246700)
Air_B1 <- c(0.499494,0.313831,24.547800)
Water_B1 <- c(5.3290400,0.0753235,13.3292000)
expression <- data.frame(Soil_A1,Air_B1,Water_B1)
rownames(expression) <- c("id","gene1","gene2","gene3")
tidy_gather <- gather(expression,key=Samplename,value = Expression,-id)
c <- read.table("counts", header=T,sep="\t",row.names = 1)
getwd()
library(dplyr)
c <- read.table("counts", header=T,sep="\t",row.names = 1)
c$mean <- apply(c,1,mean)
getwd()
library(dplyr)
c <- read.table("counts.xls", header=T,sep="\t",row.names = 1)
c$mean <- apply(c,1,mean)
View(c)
selected_data <- filter(c,mean > 50)
View(selected_data)
View(c)
install.packages(cowplot)
install.packages("cowplot")
library(cowplot)
library(cowplot)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("optparse")
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages(cowplot)
install.packages("cowplot")
install
install.packages("optparse")
install.packages("heatmap.2")
require(data.table)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DEseq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DEseq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DEseq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DEseq2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DEseq2")
library("DEseq2")
BiocManager::install("DESeq2")
library("DESeq2")
counts="gene_counts.xls"
group="sample_group.txt"
counts <- round(read.delim(counts, row.names = 1, check.names = F,quote=""))
phenodata <- read.table(group, row.names = 1, header = T, sep = "\t", check.names = F)
setwd("C:/Users/Administrator/Desktop/数据处理/经典案例/PCA-专项-Principle")
counts <- round(read.delim(counts, row.names = 1, check.names = F,quote=""))
phenodata <- read.table(group, row.names = 1, header = T, sep = "\t", check.names = F)
counts_tmp<-subset(counts, select = c(rownames(phenodata)))
counts<-counts_tmp
samples <- colnames(counts)
index_phenodata <- phenodata
for (i in 1 : length(samples))
{
index_phenodata[i,] <- phenodata[samples[i],]
}
print(index_phenodata)
#fixed the group name showing error by define the  level of index_phenodata
rownames(index_phenodata)<-c(as.character(samples))
index_phenodata$Group<-factor(index_phenodata$Group,level=unique(index_phenodata$Group))
groups <- as.character(index_phenodata$Group)
#点的颜色完全是根据pcaData的顺序加的
##modified 20170911 ,show the group name  as same as  plot-3d  by reindex coldata and counts
tmp_coldata <- data.frame(row.names = samples, Group = groups)
colData<-tmp_coldata[order(tmp_coldata$Group), , drop = FALSE]
counts<-counts[ ,c(rownames(colData))]
groups <-c(as.character(colData$Group))
samples <- colnames(counts)
dds <- DESeqDataSetFromMatrix(countData = counts, colData = colData, design = ~ Group) #画PCA图需要Deseq2
library("DESeq2")
dds <- DESeqDataSetFromMatrix(countData = counts, colData = colData, design = ~ Group) #画PCA图需要Deseq2
View(colData)
